<%= simple_form_for( @tutor, url: update_tutor_payment_info_tutor_path, remote: true, html: {class: 'payment-form'}) do |pf| %>
  <%= hidden_field_tag :authenticity_token, form_authenticity_token -%>
  <h3>Payment info</h3>
  <h4>Address</h4>
  <%= pf.input :line1 %>
  <%= pf.input :line2 %>
  <%= pf.input :city %>
  <%= pf.select :state, options_for_select(us_states), default: @tutor.state %>
  <%= pf.input :postal_code %>
  <h4>Bank info</h4>
  <h1 class="bank-errors"></h1>
  <p>Note: This information will not be stored on our servers and will be used to create an account in our merchant service.</p>
  <%= label_tag :account_number %>
  <%= text_field_tag :account_number %>
  <%= label_tag :routing_number, "Routing number (note: Use ACH routing number)" %>
  <%= text_field_tag :routing_number %>
  <%= hidden_field_tag :last_4_acct %>
  <%= pf.button :submit %>
<% end %>
<script type="text/javascript" src="https://js.stripe.com/v2/"></script>
<script type="text/javascript">
  jQuery(function($) {
    $('.payment-form').submit(function(event) {
      var $form = $(this);

      // Disable the submit button to prevent repeated clicks
      $form.find('button').prop('disabled', true);
      Stripe.setPublishableKey("<%= Rails.configuration.stripe[:publishable_key] %>");
      Stripe.bankAccount.createToken({
        country: 'US',
        currency: 'usd',
        routing_number: $('#routing_number').val(),
        account_number: $('#account_number').val()
      }, stripeResponseHandler);

      // Clear the bank account info so it's not sent through params
      $('#routing_number').val("");
      var acct_val = $('#account_number').val();
      var new_val = acct_val.substring(acct_val.length - 4);
      $('#last_4_acct').val(new_val);
      $('#account_number').val("");

      // Prevent the form from submitting with the default action
      return false;
    });
  });


  function stripeResponseHandler(status, response) {
    var $form = $('.payment-form');

    if (response.error) {
      // Show the errors on the form
      $form.find('.bank-errors').text(response.error.message);
      $form.find('button').prop('disabled', false);
    } else {
      // response contains id and bank_account, which contains additional bank account details
      var token = response.id;
      // Insert the token into the form so it gets submitted to the server
      $form.append($('<input type="hidden" name="stripeToken" />').val(token));
      // and submit
      $form.get(0).submit();
    }
  }
</script>