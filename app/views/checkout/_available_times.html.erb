<% 7.times do |count| %>
  <li>  
    <div class="calendar-column">
      <p class="day"><%= @availability_data[count][:date].strftime('%A') %></p>
      <p class="date"><%= @availability_data[count][:date].strftime('%m/%d') %></p>
      <% if @availability_data[count][:times] %>
        <% @availability_data[count][:times].each do |data| %>
          <div class="appt-time-box">
            <label>
              <input type="checkbox" id="<%=data[:uniq_id]%>" class="<%=data[:booked]%>" value="<%=data[:datetime].to_s+'----'+data[:slot_id].to_s%>" name="appt_selection[<%= data[:uniq_id] %>]" onchange="disableNeighborCheckboxes(this)">
              <div class="appt-time"><%= data[:time] %></div>
            </label>
          </div>
        <% end %>
      <% end %>
    </div>
  </li>
<% end %>

<script>
window.onload = function setSelectedAndBookedAppts() {

  if (gon.selected_appt_ids != null){
    var selectedApptIds = gon.selected_appt_ids
    var arrayLength = selectedApptIds.length;
    for (var i = 0; i < arrayLength; i++) {
      var checkbox = document.getElementById(selectedApptIds[i]);
      checkbox.checked = true;
      checkbox.onchange();
    }
  }

  var bookedAppts = document.getElementsByClassName("booked")
  if (bookedAppts.length > 0) {
    for (var i = 0; i < bookedAppts.length; i++) {
      // disable booked time
      var checkbox = bookedAppts[i];
      checkbox.disabled = true;
      // disabled 30 mins before and after booked time (if those times exist)
      var checkboxID = parseInt(checkbox.id);
      var checkboxBefore = document.getElementById(checkboxID - 1);
      if (checkboxBefore) {
        checkboxBefore.disabled = true;
      }
      var checkboxAfter = document.getElementById(checkboxID + 1);
      if (checkboxAfter) {
        checkboxAfter.disabled = true;
      }
    }
  }
};

function disableNeighborCheckboxes(element) {
  var selected = parseInt(element.id);
  checkboxTwoBeforeId = selected - 2;
  checkboxBeforeId = selected - 1;
  checkboxAfterId = selected + 1;
  checkboxTwoAfterId = selected + 2;
  
  var checkboxTwoBefore = document.getElementById(checkboxTwoBeforeId);
  var checkboxBefore = document.getElementById(checkboxBeforeId);
  var checkboxAfter = document.getElementById(checkboxAfterId);
  var checkboxTwoAfter = document.getElementById(checkboxTwoAfterId);
  
  if (element.checked) {
    // element checked - triggered when click event makes it checked
    if (checkboxBefore != null) {
      checkboxBefore.disabled = true;
    }
    if (checkboxAfter != null) {
      checkboxAfter.disabled = true;
      checkboxAfter.classList.add("second-half-of-appt");
    }
  } else {
    // when checkbox is un-checked...(ex: 5:00 is de-selected)
    if (checkboxBefore != null && checkboxTwoBefore != null) { // (4:00 and 4:30 exist)
      if (!checkboxTwoBefore.classList.contains("booked")) {    // (4:00 is not booked)
        checkboxBefore.disabled = false;                        // (remove disabled state from 4:30)
      }
    }
    if (checkboxAfter != null) {                            // (5:30 exists)
      if (!checkboxTwoAfter.classList.contains("booked")) {   // (6:00 is not booked)
        checkboxAfter.disabled = false;                       // (removed disabled state from 5:30)
      }
      checkboxAfter.classList.remove("second-half-of-appt");  // (remove 'second-half' class from 5:30)
    }
    if (checkboxTwoBefore == null && checkboxBefore != null) {  // (4:00 does not exist, 4:30 does exist)
      checkboxBefore.disabled = false;                          // (remove disabled state from 4:30)
    } else if (checkboxTwoBefore != null && checkboxTwoBefore.checked != true && !checkboxTwoBefore.classList.contains("booked")) {
      // (4:00 exists, 4:00 is not checked, 4:00 is not booked)
      checkboxBefore.disabled = false; // (remove disabled state from 4:30)
    }
    if (checkboxTwoAfter != null && checkboxTwoAfter.checked) { // (6:00 exists, 6:00 is checked)
      checkboxAfter.disabled = true;                            // (disable 5:30)
    }
    if (checkboxTwoBefore != null && checkboxTwoBefore.checked == true) { // (4:00 exists and is booked)
      checkboxBefore.disabled = true; // (disable 4:30)
    }
  }
}

// if two-checkboxes-before has class 'booked', then don't disable checkbox before
// when checkbox is unselected, don't remove 'second-half' class of checkboxBefore, if checkboxTwoBefore is checked
</script>